// vite.config.ts
import { vanillaExtractPlugin } from 'file:///Users/gimmingyu/Desktop/vook-client/node_modules/.pnpm/@vanilla-extract+vite-plugin@4.0.9_@types+node@20.12.12_vite@5.2.11/node_modules/@vanilla-extract/vite-plugin/dist/vanilla-extract-vite-plugin.cjs.js'
import react from 'file:///Users/gimmingyu/Desktop/vook-client/node_modules/.pnpm/@vitejs+plugin-react-swc@3.7.0_vite@5.2.11/node_modules/@vitejs/plugin-react-swc/index.mjs'
import postcssPresetEnv from 'file:///Users/gimmingyu/Desktop/vook-client/node_modules/.pnpm/postcss-preset-env@9.5.14_postcss@8.4.38/node_modules/postcss-preset-env/dist/index.mjs'
import { defineConfig } from 'file:///Users/gimmingyu/Desktop/vook-client/node_modules/.pnpm/vite@5.2.11_@types+node@20.12.12/node_modules/vite/dist/node/index.js'
import dts from 'file:///Users/gimmingyu/Desktop/vook-client/node_modules/.pnpm/vite-plugin-dts@3.9.1_@types+node@20.12.12_typescript@5.2.2_vite@5.2.11/node_modules/vite-plugin-dts/dist/index.mjs'

// package.json
var peerDependencies = {
  '@types/react': '^18.2.66',
  react: '>=18.0.0',
}

// vite.config.ts
var shared = {
  external: Object.keys(peerDependencies ?? {}),
  postcss: {
    plugins: [
      postcssPresetEnv({
        browsers: ['> 0.2% and not dead'],
        features: {
          'color-mix': true,
          'light-dark-function': true,
          'media-query-ranges': true,
          'cascade-layers': true,
        },
      }),
    ],
  },
}
var vanillaExtract = defineConfig({
  build: {
    sourcemap: true,
    lib: {
      entry: {
        index: 'src/index.ts',
      },
      formats: ['es', 'cjs'],
    },
    rollupOptions: {
      output: {
        dir: 'dist/vanilla-extract/',
      },
      external: [...shared.external, /^@vanilla-extract/],
    },
  },
  plugins: [react(), dts({ outDir: 'dist/vanilla-extract' })],
})
var bundle = defineConfig({
  build: {
    cssMinify: true,
    minify: true,
    sourcemap: true,
    cssCodeSplit: false,
    lib: {
      entry: {
        index: 'src/index.ts',
      },
      formats: ['es', 'cjs'],
    },
    rollupOptions: {
      output: {
        dir: 'dist/bundle/',
      },
      external: shared.external,
    },
  },
  plugins: [react(), vanillaExtractPlugin(), dts({ outDir: 'dist/bundle' })],
  css: {
    postcss: shared.postcss,
  },
})
var vite_config_default = defineConfig(({ mode }) => {
  switch (mode) {
    case 've':
      return vanillaExtract
    case 'bundle':
      return bundle
    default:
      return bundle
  }
})
export { vite_config_default as default }
//# sourceMappingURL=data:application/json;base64,
